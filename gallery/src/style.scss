@import url("https://fonts.googleapis.com/css?family=Bangers|Montserrat:700|Playfair+Display&display=swap");

:root {
  font-size: 1vmin;
}

* {
  box-sizing: border-box;
}

html,
body,
main {
  width: 100vw;
}

body {
  padding: 0;
  margin: 0;

  overflow-x: hidden;
}

header,
footer {
  display: grid;
  grid-template-columns: 10vmin auto 10vmin;

  width: 100vw;
  min-height: 14rem;

  > div {
    &:nth-of-type(1) {
      grid-column: 1;
    }

    &:nth-of-type(2) {
      grid-column: 3;
    }
  }
}

header > div {
  border-bottom: 1px solid black;
}

footer > div {
  border-top: 1px solid black;
}

footer {
  margin-top: 10vmin;

  > div {
    &:nth-of-type(1) {
      grid-column: 2;
    }
  }
}

h1 {
  padding-bottom: 0;
  margin: 0;
  font-family: "Montserrat", sans-serif;
  font-size: 14rem;
}

main {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(50vmin, 1fr));
  grid-row-gap: 5vmin;
  justify-items: center;

  // padding: 10vmin;
  padding-top: 0;
  font-family: "Playfair Display", serif;
}

.photo {
  position: relative;

  display: flex;
  justify-content: center;
  align-items: center;

  width: 50vmin;
  height: 50vmin;

  transform-style: preserve-3d;

  &:hover {
    .photo_image {
      filter: grayscale(0);
    }
  }

  &_image,
  &_frame,
  h2 {
    position: absolute;
    pointer-events: none;
    transform: translate3d(0, 0, 0);
    transition: transform 1s linear;
  }

  &_image,
  &_frame {
    width: 60%;
    height: 60%;
  }

  &_image {
    filter: grayscale(1);

    background-position: center;
    background-size: cover;
  }

  h2 {
    bottom: 0rem;
    padding: 1rem;
    margin: 0;

    font-size: 4rem;
  }

  & > span {
    position: absolute;
    top: 10rem;
    right: 0;

    display: block;

    font-size: 8rem;
    font-family: "Bangers", cursive;
    color: #df2935;

    text-shadow: 1px 1px black, 2px 2px black, 3px 3px black, 4px 4px black;

    letter-spacing: -1px;

    transform: skew(-10deg, 10deg);

    pointer-events: none;

    > span {
      display: inline-block;

      opacity: 0;
      transform: scale(2);
      transition: opacity 0s linear, transform 0.2s linear;

      @for $i from 1 through 15 {
        &:nth-child(#{$i}) {
          transition-delay: $i * 0.04s;
        }
      }
    }

    &.show > span {
      opacity: 1;
      transform: scale(1);
    }
  }
}
